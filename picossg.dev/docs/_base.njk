{% extends '_base.njk' %}

{% block head %}
  <link rel="stylesheet" href="/docs/style.css">
{%  endblock %}

{% set detailsSelectors = [] %}

{% block body %}
<button class="theme-toggle" onclick="spaish.colorScheme.toggle()">ðŸ’¡</button>
<header>
  <a href="/" class="ascii-art">
    {% include '_picossg_asciiart.txt' %}
  </a>
</header>

<div class="content-wrapper">
  <aside>
    <nav>
      {% for category, data in nav.entries() %}
        {% set files = data.items %}
        {% set detailsId = 'toc-'+data.id %}
        {% set detailsSelectors = (detailsSelectors.push('#'+detailsId), detailsSelectors) %}
        
        <details id="{{ detailsId }}">
          <summary>{{ category }}</summary>
          <ul>
            {% for file in files %}
              <li>
                {% if url === file.url %}
                  <a href="{{ file.url }}" class="active">{{ file.title }}</a>
                {% else %}
                  <a href="{{ file.url }}">{{ file.title }}</a>
                {% endif %}
                
                {% if url === file.url %}
                  <ul class="secondLevelHeadlines"></ul>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
        </details>
      {% endfor %}
    </nav>
    
    <small class="meta">
      <hr/>
      PicoSSG v{{ _site.picoSsgVersion }}
      <br/>
      <a href="https://codeberg.org/wolframkriesing/picossg">Source code</a>
      <br/>
      <a href="https://mastodontech.de/@wolframkriesing">Contact</a>
      
      <br/>
      <br/>
      Last update<br/>
      <time datetime="{{ date }}">{{ _stats.lastModified.dateISO | readableDateTime }}</time>
      <div style="font-size: x-small">
        in <a href="{{ _stats.lastModified.prettyUrlPath }}">{{ _stats.lastModified.filename }}</a>
      </div>
    </small>
  </aside>

  <main>
    {{ content | safe }}
  </main>
</div>

{% include '_allow2copy.html' %}

<script>
  const toSlug = (s) => s.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');
  const makeAllSectionsLinkable = (prefix='section') => {
    const $sections = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
    $sections.forEach(($section) => {
      if (!$section.id) {
        $section.id = `${prefix}-${toSlug($section.textContent.trim())}`;
      }
    });
  };
  const showLinkForAllSections = () => {
    const showLinkIcon = (e) => {
      e.preventDefault();
      const $section = e.currentTarget;
      if ($section.dataset.hasSpaishLink) {
        return;
      }
      
      $section.style.position = 'relative';
      const link = document.createElement('a');
      link.setAttribute('href', `#${$section.id}`);
      link.innerHTML = '#';
      link.style.position = 'absolute';
      link.style.left = '0';
      link.style.transform = 'translateX(-100%)';
      link.style.paddingInlineEnd = '0.2em';
      $section.appendChild(link);
      $section.dataset.hasSpaishLink = 'true';

      const removeHandler = (($el, link) => () => {
        $el.dataset.hasSpaishLink = '';
        $el.removeChild(link);
      })($section, link);
      $section.addEventListener('pointerleave', removeHandler, {once: true});
    };
    
    document.querySelectorAll('h1, h2, h3, h4, h5, h6')
      .forEach($el => $el.addEventListener('pointerover', showLinkIcon));
  };
  makeAllSectionsLinkable();

  const addH2sToChapter = () => {
    const $h2s = document.querySelectorAll('h2');
    const $toc = document.querySelector('.secondLevelHeadlines');
    $h2s.forEach(($h2) => {
      // Add: <li><a href="#section-slug">title</a></li>
      const $li = document.createElement('li');
      $li.innerHTML = `<a href="#${$h2.id}">${$h2.textContent}</a>`;
      $toc.appendChild($li);
    });
  };

  addH2sToChapter();
  showLinkForAllSections();
</script>

<script>
  const detailsSelectors = {{ detailsSelectors | dump | safe }};
  document.addEventListener('DOMContentLoaded', () => spaish.details.reopen('picossg-docs', detailsSelectors));
</script>
{% endblock %}
