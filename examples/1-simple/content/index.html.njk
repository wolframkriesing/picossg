<!doctype>
<html lang="en" prefix="og: https://ogp.me/ns#">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Simple picossg example page</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <h1>Simple picoSSG example page</h1>

  <p>
    This is a simple example of how to use <strong>picossg</strong> to create a static site. 
    The project structure is simple, and the output is clean and easy to understand.
  </p>

  
  <h2>A Loop inside a Template</h2>
  <p>
    The files that are served are the following:
  </p>
  <ul>
  {% for file in ['index.html', 'note.html', 'style.css'] %}
    <li>
      <a href="{{ file }}">{{ file }}</a>
    </li>
  {% endfor %}
  </ul>

  
  <h2>The Power of picoSSG</h2>
  <p>
    Let's embed a link, that is written as pure markdown code to the
    {{ '[note](./note.html)' | mdinline | safe }}.
    This does not look amazing, while it isn't but look into this file here
    and you can see that the link was generated from <code>[note](./note.html)</code> which is
    markdown, and that got embedded into a piece of nunjuck <code>{{"{{"}} right here {{"}}"}}</code> and 
    applied a filter <code>mdinline</code> to it. 
    Altogether, the simple link "note" in the first line of this paragraph is generated by this
    <code>{{ "{{ '[note](./note.html)' | mdinline | safe }}." }}</code>
  </p>
</body>
