<!doctype html>
<html lang="en" prefix="og: https://ogp.me/ns#">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="mobile-web-app-capable" content="yes"/>
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="author" content="Wolfram Kriesing">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="PicoSSG - The minimalist static site generator with predictable 1:1 file mapping">

  <title>{{ title }} | picoSSG docs</title>
  <link rel="stylesheet" href="/style.css">
  <script defer data-domain="picossg.dev" src="https://plausible.io/js/script.outbound-links.js"></script>
  <script>window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }</script>
  
  
  {% block head %}{% endblock %}
</head>
<body>
<header>
  <a href="/" class="logo">picoSSG</a>
</header>

<div class="content-wrapper">
  <aside>
    <nav>
      {% for category, files in nav.entries() %}
        <details open>
          <summary>{{ category }}</summary>
          <ul>
            {% for file in files %}
              <li>
                <a href="{{ file.url }}" {% if url === file.url %}class="active"{% endif %}>{{ file.title }}</a>
                
                {% if url === file.url %}
                  <ul class="secondLevelHeadlines">
                    {% for h2 in file.firstLevelHeadlines %}
                      <li><a href="#{{ h2 | slug }}">{{ h2 }}</a></li>
                    {% endfor %}
                  </ul>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
        </details>
      {% endfor %}
    </nav>
  </aside>

  <main>
    {{ content | safe }}
  </main>
</div>

{% include '_allow2copy.html' %}

<style>
  h2 {
    scroll-margin-top: 4rem;
  }
  .secondLevelHeadlines {
    font-size: smaller;
  }
  ul.secondLevelHeadlines {
    margin-top: 0;
  }
  .secondLevelHeadlines li {
    margin: 0;
    white-space: nowrap;
  }
  .secondLevelHeadlines a {
    padding: 0;
  }
</style>
<script>
  // Add IDs to h2 elements, so they can be navigated to, markdown per se does not add IDs to the headings
  const $h2s = document.querySelectorAll('h2');
  document.querySelectorAll('.secondLevelHeadlines a').forEach($ahref => {
    const h2text = $ahref.innerText;
    const h2id = $ahref.getAttribute('href').substring(1);
    $h2s.forEach($h2 => {
      if ($h2.innerText === h2text) {
        $h2.id = h2id;
      }
    });
  });
</script>

</body>
</html>
