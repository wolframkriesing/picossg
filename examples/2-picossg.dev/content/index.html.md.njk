---
layout: _base.njk
title: Home
---

# PicoSSG - The Minimal **S**tatic **S**ite **G**enerator

PicoSSG is a minimal static site generator built on the philosophy of simplicity and predictability. 
It processes your [markdown](https://markdown-it.github.io/), [nunjucks templates](https://mozilla.github.io/nunjucks/), and static files into a clean, static website with minimal configuration.

## How It Works

Make sure you have [nodejs.org](https://nodejs.org/) installed and then run on the command line:
```bash-allow2copy
npx @wolframkriesing/picossg -c content -o output
```

It will process all files in the `content` directory and put them into the `output` directory like so:

| Files in `content` | Processing Steps | Files in `output` |
|-------------|-----------------|-------------|
| `index.html.md` | Process as Markdown | `index.html` |
| `style.css` | Copied as is | `style.css` |
| `image.webp` | Copied as is | `image.webp` |
| `page.html.njk` | Process as Nunjucks | `page.html` |
| `post.html.md.njk` | Process as Nunjucks, then as Markdown | `post.html` |


## Guiding Principles

- **Small Footprint** (and fast): Do only the work that is needed 
  ({{ srcStats.numFiles }} files source code, {{ srcStats.numLoc }} LOC)
- **Minimal Magic**: Simple, predictable processing
- **1:1 File Mapping**: Each source file maps directly to an output file
- **Straightforward Processing**: Markdown (`.md`), Nunjucks templates (`.njk`), or both combined
- **Zero Configuration**: Works out of the box with sensible defaults
- **Flexibility When Needed**: Optional hooks for preprocessing and postprocessing when you need more power
- **Tiny Feature Set**: Only markdown, nunjucks and frontmatter processing, nothing more

(Until now) There is no plan to support more template engines.

## Key Features

### Simple File Processing Rules

PicoSSG processes:
- Markdown files (`.md`) using [markdown-it](https://markdown-it.github.io/)
- Nunjucks templates (`.njk`) using [nunjucks](https://mozilla.github.io/nunjucks/)
- Combined files (`.md.njk` or `.njk.md`) - extensions processed from right to left
- Static assets (copied as-is)
- Files starting with underscore (`_`) are excluded from the output (`_config.js`, `_layouts/` will not land in the output directory)
- Optional front matter for metadata and layouts

### Predictable Output

One of PicoSSG's most valuable features is its predictable 1:1 mapping from source to output:
- `content/about.html.md` becomes `output/about.html`  
   ⚠️ `content.md` will not become a URL `content/` it must be `content/index.html.md`
- `content/posts/post.html.md.njk` becomes `output/posts/post.html`
- `content/css/style.css` is copied as is to `output/css/style.css`

## Getting Started

Ready to start using PicoSSG? Check out:

- [Installation Guide](/install/) - How to install PicoSSG
- [Quick Start Guide](/quick-start/) - Build your first site in minutes

## Philosophy

PicoSSG is built on the belief that a static site generator should be:

1. **Simple to understand**: The codebase should be small and easy to understand ({{ srcStats.numLoc }} LOCs)
2. **Predictable in operation**: No magic, no surprises
3. **Minimal in configuration**: Works out of the box
4. **Flexible when needed**: Provides escape hatches for advanced use cases

This philosophy guides every decision in the development of PicoSSG.

## Examples

Looking for inspiration? Check out these sites built with PicoSSG:

- [JSCraftCamp.org site for 2025](https://codeberg.org/wolframkriesing/jscc-site-2025)
- [picostitch.com](https://picostitch.com) - Wolfram Kriesing's blog ([source code](https://codeberg.org/wolframkriesing/picostitch-com))

## Contribute

PicoSSG is open source and welcomes contributions. Check out the [repository on Codeberg](https://codeberg.org/wolframkriesing/picossg) to contribute.